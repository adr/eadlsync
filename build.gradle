apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: "application"

version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.mashape.unirest:unirest-java:1.4.9'
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'com.beust:jcommander:1.72'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.jboss.forge.roaster:roaster-api:2.20.0.Final'
    compile 'org.jboss.forge.roaster:roaster-jdt:2.20.0.Final'
    compile 'com.google.guava:guava:22.0'
    compile 'com.googlecode.java-diff-utils:diffutils:1.3.0'

    // dependencies for se-repo data
    compile 'org.jboss.resteasy:resteasy-atom-provider:3.1.3.Final'
    compile 'org.jboss.resteasy:resteasy-jackson2-provider:3.1.3.Final'
    compile 'org.jboss.resteasy:resteasy-client:3.1.3.Final'
    compile 'org.jboss.resteasy:resteasy-multipart-provider:3.1.3.Final'
    compile ('ch.hsr.isf.serepo:serepo-data-restinterface:1.0-SNAPSHOT') {
        exclude group: 'org.slf4j'
    }

    compile project(':embedded-adl')

    // testing against se-repo
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.google.code.gson:gson:2.8.1'
    testCompile 'ch.hsr.isf.serepo:serepo-rest:1.0-SNAPSHOT'

    testCompile files("serepo/serepo-rest/target/classes")  {
        builtBy "compileSeRepo"
    }
}

mainClassName = 'com.eadlsync.cli.EADLSyncMain'

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    dependsOn 'cleanTest'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

task generateSource(dependsOn: ["initSubmodules"]) {
    description 'Generates Java source files.'
}

task generateTestSource(dependsOn: ["generateSource", "compileSeRepo"]) {
    description 'Generates Java source files for testing.'
}

test {
    exclude 'com/eadlsync/suite/**'
    exclude 'radar/ad/**'
}

task testUnitTest(type: Test) {
    include '**/*UnitTestSuite.class'
}

task testSeRepoServerTests(type: Test) {
    include '**/*SeRepoServerTestSuite.class'
}

task initSubmodules(type: Exec) {
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "cmd", "/c", "git", "submodule", "update", "--init", "--recursive", "--remote"
    } else {
        commandLine "git", "submodule", "update", "--init", "--recursive", "--remote"
    }
}

task compileSeRepo(type: Exec) {
    workingDir "serepo"
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "cmd", "/c", "mvn", "install"
    } else {
        commandLine "mvn", "install"
    }
}
compileJava.dependsOn generateSource
compileTestJava.dependsOn generateTestSource
compileSeRepo.dependsOn initSubmodules